import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import { toast } from 'sonner';

interface SubscriptionTier {
  id: string;
  name: string;
  price: number;
  features: string[];
  color: string;
  icon: string;
}

interface SubscriptionSystemProps {
  currentTier?: string;
  onSubscribe?: (tierId: string) => void;
}

const SubscriptionSystem = ({ currentTier, onSubscribe }: SubscriptionSystemProps) => {
  const tiers: SubscriptionTier[] = [
    {
      id: 'free',
      name: '–ó—Ä–∏—Ç–µ–ª—å',
      price: 0,
      color: 'bg-gray-600',
      icon: 'Eye',
      features: [
        '–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∏–º–æ–≤',
        '–ë–∞–∑–æ–≤—ã–π —á–∞—Ç',
        '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —ç–º–æ–¥–∑–∏',
      ],
    },
    {
      id: 'subscriber',
      name: '–ü–æ–¥–ø–∏—Å—á–∏–∫',
      price: 199,
      color: 'bg-gaming-red',
      icon: 'Gem',
      features: [
        '–í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ó—Ä–∏—Ç–µ–ª—è',
        '–ó–Ω–∞—á–æ–∫ SUB –≤ —á–∞—Ç–µ',
        '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —ç–º–æ–¥–∑–∏',
        '–ß–∞—Ç –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö',
      ],
    },
    {
      id: 'vip',
      name: 'VIP',
      price: 499,
      color: 'bg-purple-600',
      icon: 'Star',
      features: [
        '–í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ü–æ–¥–ø–∏—Å—á–∏–∫–∞',
        'VIP –∑–Ω–∞—á–æ–∫ –≤ —á–∞—Ç–µ',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —ç–º–æ–¥–∑–∏',
        '–î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç—ã–º —Å—Ç—Ä–∏–º–∞–º',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–£—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–∞—Ö —Å–æ —Å—Ç—Ä–∏–º–µ—Ä–æ–º',
      ],
    },
  ];

  const [selectedTier, setSelectedTier] = useState(currentTier || 'free');

  const handleSubscribe = (tierId: string) => {
    if (tierId === selectedTier) {
      toast.info('–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —ç—Ç–æ—Ç —É—Ä–æ–≤–µ–Ω—å!');
      return;
    }

    const tier = tiers.find(t => t.id === tierId);
    if (tier) {
      if (tier.price === 0) {
        toast.info('–≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞');
      } else {
        setSelectedTier(tierId);
        onSubscribe?.(tierId);
        toast.success(`–ü–æ–¥–ø–∏—Å–∫–∞ "${tier.name}" –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞! üéâ`, {
          description: `${tier.price}‚ÇΩ/–º–µ—Å—è—Ü`
        });
      }
    }
  };

  return (
    <div className="space-y-6">
      <div className="text-center space-y-2">
        <h2 className="text-4xl font-black text-gradient-fire">–°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–ø–∏—Å–æ–∫</h2>
        <p className="text-gray-300 text-lg">–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–∞–Ω–∞–ª–∞</p>
      </div>

      <div className="grid md:grid-cols-3 gap-6">
        {tiers.map(tier => {
          const isCurrentTier = selectedTier === tier.id;
          return (
            <Card
              key={tier.id}
              className={`relative overflow-hidden transition-all ${
                isCurrentTier
                  ? 'border-gaming-yellow/50 bg-gaming-yellow/10 scale-105'
                  : 'border-gaming-red/30 bg-black/30 hover:scale-105'
              }`}
            >
              {isCurrentTier && (
                <Badge className="absolute top-4 right-4 bg-gaming-yellow text-black font-bold">
                  –ê–∫—Ç–∏–≤–Ω–∞
                </Badge>
              )}
              <CardHeader>
                <div className={`${tier.color} w-16 h-16 rounded-full flex items-center justify-center mb-4 mx-auto`}>
                  <Icon name={tier.icon} size={32} className="text-white" />
                </div>
                <CardTitle className="text-center text-2xl text-white">
                  {tier.name}
                </CardTitle>
                <div className="text-center">
                  <span className="text-4xl font-black text-gradient-fire">
                    {tier.price === 0 ? 'FREE' : `${tier.price}‚ÇΩ`}
                  </span>
                  {tier.price > 0 && (
                    <span className="text-gray-400 text-sm">/–º–µ—Å—è—Ü</span>
                  )}
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                <ul className="space-y-2">
                  {tier.features.map((feature, index) => (
                    <li key={index} className="flex items-start gap-2 text-gray-300">
                      <Icon name="Check" size={16} className="text-green-500 mt-1 flex-shrink-0" />
                      <span className="text-sm">{feature}</span>
                    </li>
                  ))}
                </ul>
                <Button
                  onClick={() => handleSubscribe(tier.id)}
                  disabled={isCurrentTier}
                  className={`w-full font-bold ${
                    isCurrentTier
                      ? 'bg-gray-600 cursor-not-allowed'
                      : 'bg-gradient-to-r from-gaming-red to-gaming-orange hover:from-gaming-red/80 hover:to-gaming-orange/80'
                  } text-white`}
                >
                  {isCurrentTier ? '–¢–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞' : tier.price === 0 ? '–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø' : '–û—Ñ–æ—Ä–º–∏—Ç—å'}
                </Button>
              </CardContent>
            </Card>
          );
        })}
      </div>

      <Card className="bg-gradient-to-br from-gaming-red/10 to-gaming-orange/10 border-gaming-red/30">
        <CardHeader>
          <CardTitle className="text-white flex items-center gap-2">
            <Icon name="Gift" size={24} className="text-gaming-yellow" />
            –ë–æ–Ω—É—Å—ã –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid md:grid-cols-2 gap-4">
            <div className="flex items-start gap-3">
              <Icon name="Youtube" size={20} className="text-red-600 mt-1" />
              <div>
                <h4 className="text-white font-bold">YouTube –ø–æ–¥–ø–∏—Å–∫–∞</h4>
                <p className="text-gray-300 text-sm">
                  –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ —Å YouTube –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤
                </p>
              </div>
            </div>
            <div className="flex items-start gap-3">
              <Icon name="Zap" size={20} className="text-gaming-yellow mt-1" />
              <div>
                <h4 className="text-white font-bold">–ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ</h4>
                <p className="text-gray-300 text-sm">
                  –°–∫–∏–¥–∫–∞ 10% –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –ø—Ä–æ–¥–ª–µ–Ω–∏–∏
                </p>
              </div>
            </div>
            <div className="flex items-start gap-3">
              <Icon name="Users" size={20} className="text-gaming-orange mt-1" />
              <div>
                <h4 className="text-white font-bold">–ü—Ä–∏–≤–µ–¥–∏ –¥—Ä—É–≥–∞</h4>
                <p className="text-gray-300 text-sm">
                  +7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞
                </p>
              </div>
            </div>
            <div className="flex items-start gap-3">
              <Icon name="Trophy" size={20} className="text-gaming-yellow mt-1" />
              <div>
                <h4 className="text-white font-bold">–≠–∫—Å–∫–ª—é–∑–∏–≤—ã</h4>
                <p className="text-gray-300 text-sm">
                  –†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º
                </p>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default SubscriptionSystem;
